import java.util.ArrayList;

// Classe base para Veículo
class Veiculo {
    private String marca;
    private String modelo;
    private int ano;

    public Veiculo(String marca, String modelo, int ano) {
        this.marca = marca;
        this.modelo = modelo;
        this.ano = ano;
    }

    public String getMarca() {
        return marca;
    }

    public String getModelo() {
        return modelo;
    }

    public int getAno() {
        return ano;
    }

    // Outros métodos e atributos comuns podem ser adicionados aqui
}

// Classe para Carro que herda de Veiculo
class Carro extends Veiculo {
    private int numeroPortas;

    public Carro(String marca, String modelo, int ano, int numeroPortas) {
        super(marca, modelo, ano);
        this.numeroPortas = numeroPortas;
    }

    public int getNumeroPortas() {
        return numeroPortas;
    }

    // Outros métodos específicos para Carro podem ser adicionados aqui
}

// Classe para Moto que herda de Veiculo
class Moto extends Veiculo {
    private boolean temBau;

    public Moto(String marca, String modelo, int ano, boolean temBau) {
        super(marca, modelo, ano);
        this.temBau = temBau;
    }

    public boolean temBau() {
        return temBau;
    }

    // Outros métodos específicos para Moto podem ser adicionados aqui
}

// Classe para Caminhão que herda de Veiculo
class Caminhao extends Veiculo {
    private double capacidadeCarga;

    public Caminhao(String marca, String modelo, int ano, double capacidadeCarga) {
        super(marca, modelo, ano);
        this.capacidadeCarga = capacidadeCarga;
    }

    public double getCapacidadeCarga() {
        return capacidadeCarga;
    }

    // Outros métodos específicos para Caminhao podem ser adicionados aqui
}

public class SistemaGestaoVeiculos {
    public static void main(String[] args) {
        // Criando uma lista de veículos usando ArrayList
        ArrayList<Veiculo> veiculos = new ArrayList<>();

        // Adicionando instâncias de Carro, Moto e Caminhao à lista
        veiculos.add(new Carro("Toyota", "Corolla", 2022, 4));
        veiculos.add(new Moto("Honda", "CBR500R", 2021, true));
        veiculos.add(new Caminhao("Volvo", "FH16", 2020, 25000.0));

        // Iterando sobre a lista usando foreach
        for (Veiculo veiculo : veiculos) {
            System.out.println("Marca: " + veiculo.getMarca());
            System.out.println("Modelo: " + veiculo.getModelo());
            System.out.println("Ano: " + veiculo.getAno());

            // Verificando o tipo de veículo e realizando operações específicas
            if (veiculo instanceof Carro) {
                Carro carro = (Carro) veiculo;
                System.out.println("Número de Portas: " + carro.getNumeroPortas());
            } else if (veiculo instanceof Moto) {
                Moto moto = (Moto) veiculo;
                System.out.println("Tem Baú: " + moto.temBau());
            } else if (veiculo instanceof Caminhao) {
                Caminhao caminhao = (Caminhao) veiculo;
                System.out.println("Capacidade de Carga: " + caminhao.getCapacidadeCarga() + " kg");
            }

            System.out.println("--------");
        }
    }
}
